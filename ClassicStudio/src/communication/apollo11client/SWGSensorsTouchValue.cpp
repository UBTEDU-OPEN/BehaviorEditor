/**
 * Yanshee RESTful API
 *  ## 概述 Yanshee RESTful APIs是由使用[swagger-codegen](https://github.com/swagger-api/swagger-codegen)基于 [OpenAPI-Spec](https://github.com/swagger-api/swagger-core/wiki)的工程。 所有的API由Flask的[Connexion](https://github.com/zalando/connexion)来解释。 Yanshee-ROS中的apollo提供所有的RESTful APIs服务。 同时Yanshee RESTful APIs提供英文和中文两个版本： - [英文版本](https://app.swaggerhub.com/apis-docs/UBTEDU/apollo_en/1.0.0) - [中文版本](https://app.swaggerhub.com/apis-docs/UBTEDU/apollo_cn/1.0.0)  ## 依赖 Python 2.7 or 3.4+  
 *
 * OpenAPI spec version: 1.0.1
 * Contact: swenggroup@ubtrobot.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGSensorsTouchValue.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGSensorsTouchValue::SWGSensorsTouchValue(QString json) {
    init();
    this->fromJson(json);
}

SWGSensorsTouchValue::SWGSensorsTouchValue() {
    init();
}

SWGSensorsTouchValue::~SWGSensorsTouchValue() {
    this->cleanup();
}

void
SWGSensorsTouchValue::init() {
    touch = new QList<SWGSensorsTouchInfo*>();
    m_touch_isSet = false;
}

void
SWGSensorsTouchValue::cleanup() {
    if(touch != nullptr) { 
        auto arr = touch;
        for(auto o: *arr) { 
            delete o;
        }
        delete touch;
    }
}

SWGSensorsTouchValue*
SWGSensorsTouchValue::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGSensorsTouchValue::fromJsonObject(QJsonObject pJson) {
    
    ::Swagger::setValue(&touch, pJson["touch"], "QList", "SWGSensorsTouchInfo");
}

QString
SWGSensorsTouchValue::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
SWGSensorsTouchValue::asJsonObject() {
    QJsonObject obj;
    if(touch->size() > 0){
        toJsonArray((QList<void*>*)touch, obj, "touch", "SWGSensorsTouchInfo");
    }

    return obj;
}

QList<SWGSensorsTouchInfo*>*
SWGSensorsTouchValue::getTouch() {
    return touch;
}
void
SWGSensorsTouchValue::setTouch(QList<SWGSensorsTouchInfo*>* touch) {
    this->touch = touch;
    this->m_touch_isSet = true;
}


bool
SWGSensorsTouchValue::isSet(){
    bool isObjectUpdated = false;
    do{
        if(touch->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

