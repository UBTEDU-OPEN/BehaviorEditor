/**
 * Yanshee RESTful API
 *  ## 概述 Yanshee RESTful APIs是由使用[swagger-codegen](https://github.com/swagger-api/swagger-codegen)基于 [OpenAPI-Spec](https://github.com/swagger-api/swagger-core/wiki)的工程。 所有的API由Flask的[Connexion](https://github.com/zalando/connexion)来解释。 Yanshee-ROS中的apollo提供所有的RESTful APIs服务。 同时Yanshee RESTful APIs提供英文和中文两个版本： - [英文版本](https://app.swaggerhub.com/apis-docs/UBTEDU/apollo_en/1.0.0) - [中文版本](https://app.swaggerhub.com/apis-docs/UBTEDU/apollo_cn/1.0.0)  ## 依赖 Python 2.7 or 3.4+  
 *
 * OpenAPI spec version: 1.0.1
 * Contact: swenggroup@ubtrobot.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SWGServosResult.h
 *
 * 
 */

#ifndef SWGServosResult_H_
#define SWGServosResult_H_

#include <QJsonObject>



#include "SWGObject.h"

namespace Swagger {

class SWGServosResult: public SWGObject {
public:
    SWGServosResult();
    SWGServosResult(QString json);
    ~SWGServosResult();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    SWGServosResult* fromJson(QString jsonString) override;

    bool isRightShoulderRoll();
    void setRightShoulderRoll(bool right_shoulder_roll);

    bool isRightShoulderFlex();
    void setRightShoulderFlex(bool right_shoulder_flex);

    bool isRightElbowFlex();
    void setRightElbowFlex(bool right_elbow_flex);

    bool isLeftShoulderRoll();
    void setLeftShoulderRoll(bool left_shoulder_roll);

    bool isLeftShoulderFlex();
    void setLeftShoulderFlex(bool left_shoulder_flex);

    bool isLeftElbowFlex();
    void setLeftElbowFlex(bool left_elbow_flex);

    bool isRightHipLr();
    void setRightHipLr(bool right_hip_lr);

    bool isRightHipFb();
    void setRightHipFb(bool right_hip_fb);

    bool isRightKneeFlex();
    void setRightKneeFlex(bool right_knee_flex);

    bool isRightAnkleFb();
    void setRightAnkleFb(bool right_ankle_fb);

    bool isRightAnkleUd();
    void setRightAnkleUd(bool right_ankle_ud);

    bool isLeftHipLr();
    void setLeftHipLr(bool left_hip_lr);

    bool isLeftHipFb();
    void setLeftHipFb(bool left_hip_fb);

    bool isLeftKneeFlex();
    void setLeftKneeFlex(bool left_knee_flex);

    bool isLeftAnkleFb();
    void setLeftAnkleFb(bool left_ankle_fb);

    bool isLeftAnkleUd();
    void setLeftAnkleUd(bool left_ankle_ud);

    bool isNeckLr();
    void setNeckLr(bool neck_lr);


    virtual bool isSet() override;

private:
    bool right_shoulder_roll;
    bool m_right_shoulder_roll_isSet;

    bool right_shoulder_flex;
    bool m_right_shoulder_flex_isSet;

    bool right_elbow_flex;
    bool m_right_elbow_flex_isSet;

    bool left_shoulder_roll;
    bool m_left_shoulder_roll_isSet;

    bool left_shoulder_flex;
    bool m_left_shoulder_flex_isSet;

    bool left_elbow_flex;
    bool m_left_elbow_flex_isSet;

    bool right_hip_lr;
    bool m_right_hip_lr_isSet;

    bool right_hip_fb;
    bool m_right_hip_fb_isSet;

    bool right_knee_flex;
    bool m_right_knee_flex_isSet;

    bool right_ankle_fb;
    bool m_right_ankle_fb_isSet;

    bool right_ankle_ud;
    bool m_right_ankle_ud_isSet;

    bool left_hip_lr;
    bool m_left_hip_lr_isSet;

    bool left_hip_fb;
    bool m_left_hip_fb_isSet;

    bool left_knee_flex;
    bool m_left_knee_flex_isSet;

    bool left_ankle_fb;
    bool m_left_ankle_fb_isSet;

    bool left_ankle_ud;
    bool m_left_ankle_ud_isSet;

    bool neck_lr;
    bool m_neck_lr_isSet;

};

}

#endif /* SWGServosResult_H_ */
