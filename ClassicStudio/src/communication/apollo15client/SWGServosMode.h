/**
 * Yanshee RESTful API
 *  ## 概述 Yanshee RESTful APIs是由使用[swagger-codegen](https://github.com/swagger-api/swagger-codegen)基于 [OpenAPI-Spec](https://github.com/swagger-api/swagger-core/wiki)的工程。 所有的API由Flask的[Connexion](https://github.com/zalando/connexion)来解释。 Yanshee-ROS中的apollo提供所有的RESTful APIs服务。 同时Yanshee RESTful APIs提供英文和中文两个版本： - [英文版本](https://app.swaggerhub.com/apis-docs/UBTEDU/apollo_en/1.0.0) - [中文版本](https://app.swaggerhub.com/apis-docs/UBTEDU/apollo_cn/1.0.0)  ## 依赖 Python 2.7 or 3.4+  
 *
 * OpenAPI spec version: 1.0.0
 * Contact: swenggroup@ubtrobot.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SWGServosMode.h
 *
 * 
 */

#ifndef SWGServosMode_H_
#define SWGServosMode_H_

#include <QJsonObject>


#include <QString>

#include "SWGObject.h"

namespace Swagger {

class SWGServosMode: public SWGObject {
public:
    SWGServosMode();
    SWGServosMode(QString json);
    ~SWGServosMode();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    SWGServosMode* fromJson(QString jsonString) override;

    QString* getHeadPitch();
    void setHeadPitch(QString* head_pitch);

    QString* getHeadYaw();
    void setHeadYaw(QString* head_yaw);

    QString* getRShoulderPitch();
    void setRShoulderPitch(QString* r_shoulder_pitch);

    QString* getRShoulderRoll();
    void setRShoulderRoll(QString* r_shoulder_roll);

    QString* getRElbowRoll();
    void setRElbowRoll(QString* r_elbow_roll);

    QString* getRHand();
    void setRHand(QString* r_hand);

    QString* getLShoulderPitch();
    void setLShoulderPitch(QString* l_shoulder_pitch);

    QString* getLShoulderRoll();
    void setLShoulderRoll(QString* l_shoulder_roll);

    QString* getLElbowRoll();
    void setLElbowRoll(QString* l_elbow_roll);

    QString* getLHand();
    void setLHand(QString* l_hand);

    QString* getRHipYaw();
    void setRHipYaw(QString* r_hip_yaw);

    QString* getRHipRoll();
    void setRHipRoll(QString* r_hip_roll);

    QString* getRHipPitch();
    void setRHipPitch(QString* r_hip_pitch);

    QString* getRKneePitch();
    void setRKneePitch(QString* r_knee_pitch);

    QString* getRAnklePitch();
    void setRAnklePitch(QString* r_ankle_pitch);

    QString* getRAnkleRoll();
    void setRAnkleRoll(QString* r_ankle_roll);

    QString* getLHipYaw();
    void setLHipYaw(QString* l_hip_yaw);

    QString* getLHipRoll();
    void setLHipRoll(QString* l_hip_roll);

    QString* getLHipPitch();
    void setLHipPitch(QString* l_hip_pitch);

    QString* getLKneePitch();
    void setLKneePitch(QString* l_knee_pitch);

    QString* getLAnklePitch();
    void setLAnklePitch(QString* l_ankle_pitch);

    QString* getLAnkleRoll();
    void setLAnkleRoll(QString* l_ankle_roll);


    virtual bool isSet() override;

private:
    QString* head_pitch;
    bool m_head_pitch_isSet;

    QString* head_yaw;
    bool m_head_yaw_isSet;

    QString* r_shoulder_pitch;
    bool m_r_shoulder_pitch_isSet;

    QString* r_shoulder_roll;
    bool m_r_shoulder_roll_isSet;

    QString* r_elbow_roll;
    bool m_r_elbow_roll_isSet;

    QString* r_hand;
    bool m_r_hand_isSet;

    QString* l_shoulder_pitch;
    bool m_l_shoulder_pitch_isSet;

    QString* l_shoulder_roll;
    bool m_l_shoulder_roll_isSet;

    QString* l_elbow_roll;
    bool m_l_elbow_roll_isSet;

    QString* l_hand;
    bool m_l_hand_isSet;

    QString* r_hip_yaw;
    bool m_r_hip_yaw_isSet;

    QString* r_hip_roll;
    bool m_r_hip_roll_isSet;

    QString* r_hip_pitch;
    bool m_r_hip_pitch_isSet;

    QString* r_knee_pitch;
    bool m_r_knee_pitch_isSet;

    QString* r_ankle_pitch;
    bool m_r_ankle_pitch_isSet;

    QString* r_ankle_roll;
    bool m_r_ankle_roll_isSet;

    QString* l_hip_yaw;
    bool m_l_hip_yaw_isSet;

    QString* l_hip_roll;
    bool m_l_hip_roll_isSet;

    QString* l_hip_pitch;
    bool m_l_hip_pitch_isSet;

    QString* l_knee_pitch;
    bool m_l_knee_pitch_isSet;

    QString* l_ankle_pitch;
    bool m_l_ankle_pitch_isSet;

    QString* l_ankle_roll;
    bool m_l_ankle_roll_isSet;

};

}

#endif /* SWGServosMode_H_ */
