/**
 * Yanshee RESTful API
 *  ## 概述 Yanshee RESTful APIs是由使用[swagger-codegen](https://github.com/swagger-api/swagger-codegen)基于 [OpenAPI-Spec](https://github.com/swagger-api/swagger-core/wiki)的工程。 所有的API由Flask的[Connexion](https://github.com/zalando/connexion)来解释。 Yanshee-ROS中的apollo提供所有的RESTful APIs服务。 同时Yanshee RESTful APIs提供英文和中文两个版本： - [英文版本](https://app.swaggerhub.com/apis-docs/UBTEDU/apollo_en/1.0.0) - [中文版本](https://app.swaggerhub.com/apis-docs/UBTEDU/apollo_cn/1.0.0)  ## 依赖 Python 2.7 or 3.4+  
 *
 * OpenAPI spec version: 1.0.0
 * Contact: swenggroup@ubtrobot.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SWGServosResult.h
 *
 * 
 */

#ifndef SWGServosResult_H_
#define SWGServosResult_H_

#include <QJsonObject>



#include "SWGObject.h"

namespace Swagger {

class SWGServosResult: public SWGObject {
public:
    SWGServosResult();
    SWGServosResult(QString json);
    ~SWGServosResult();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    SWGServosResult* fromJson(QString jsonString) override;

    bool isHeadPitch();
    void setHeadPitch(bool head_pitch);

    bool isHeadYaw();
    void setHeadYaw(bool head_yaw);

    bool isRShoulderPitch();
    void setRShoulderPitch(bool r_shoulder_pitch);

    bool isRShoulderRoll();
    void setRShoulderRoll(bool r_shoulder_roll);

    bool isRElbowRoll();
    void setRElbowRoll(bool r_elbow_roll);

    bool isRHand();
    void setRHand(bool r_hand);

    bool isLShoulderPitch();
    void setLShoulderPitch(bool l_shoulder_pitch);

    bool isLShoulderRoll();
    void setLShoulderRoll(bool l_shoulder_roll);

    bool isLElbowRoll();
    void setLElbowRoll(bool l_elbow_roll);

    bool isLHand();
    void setLHand(bool l_hand);

    bool isRHipYaw();
    void setRHipYaw(bool r_hip_yaw);

    bool isRHipRoll();
    void setRHipRoll(bool r_hip_roll);

    bool isRHipPitch();
    void setRHipPitch(bool r_hip_pitch);

    bool isRKneePitch();
    void setRKneePitch(bool r_knee_pitch);

    bool isRAnklePitch();
    void setRAnklePitch(bool r_ankle_pitch);

    bool isRAnkleRoll();
    void setRAnkleRoll(bool r_ankle_roll);

    bool isLHipYaw();
    void setLHipYaw(bool l_hip_yaw);

    bool isLHipRoll();
    void setLHipRoll(bool l_hip_roll);

    bool isLHipPitch();
    void setLHipPitch(bool l_hip_pitch);

    bool isLKneePitch();
    void setLKneePitch(bool l_knee_pitch);

    bool isLAnklePitch();
    void setLAnklePitch(bool l_ankle_pitch);

    bool isLAnkleRoll();
    void setLAnkleRoll(bool l_ankle_roll);


    virtual bool isSet() override;

private:
    bool head_pitch;
    bool m_head_pitch_isSet;

    bool head_yaw;
    bool m_head_yaw_isSet;

    bool r_shoulder_pitch;
    bool m_r_shoulder_pitch_isSet;

    bool r_shoulder_roll;
    bool m_r_shoulder_roll_isSet;

    bool r_elbow_roll;
    bool m_r_elbow_roll_isSet;

    bool r_hand;
    bool m_r_hand_isSet;

    bool l_shoulder_pitch;
    bool m_l_shoulder_pitch_isSet;

    bool l_shoulder_roll;
    bool m_l_shoulder_roll_isSet;

    bool l_elbow_roll;
    bool m_l_elbow_roll_isSet;

    bool l_hand;
    bool m_l_hand_isSet;

    bool r_hip_yaw;
    bool m_r_hip_yaw_isSet;

    bool r_hip_roll;
    bool m_r_hip_roll_isSet;

    bool r_hip_pitch;
    bool m_r_hip_pitch_isSet;

    bool r_knee_pitch;
    bool m_r_knee_pitch_isSet;

    bool r_ankle_pitch;
    bool m_r_ankle_pitch_isSet;

    bool r_ankle_roll;
    bool m_r_ankle_roll_isSet;

    bool l_hip_yaw;
    bool m_l_hip_yaw_isSet;

    bool l_hip_roll;
    bool m_l_hip_roll_isSet;

    bool l_hip_pitch;
    bool m_l_hip_pitch_isSet;

    bool l_knee_pitch;
    bool m_l_knee_pitch_isSet;

    bool l_ankle_pitch;
    bool m_l_ankle_pitch_isSet;

    bool l_ankle_roll;
    bool m_l_ankle_roll_isSet;

};

}

#endif /* SWGServosResult_H_ */
